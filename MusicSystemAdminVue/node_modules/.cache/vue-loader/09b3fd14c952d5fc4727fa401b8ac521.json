{"remainingRequest":"D:\\AC\\shixun\\MusicSystem\\MusicSystemAdminVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\AC\\shixun\\MusicSystem\\MusicSystemAdminVue\\src\\pages\\ListSongPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\AC\\shixun\\MusicSystem\\MusicSystemAdminVue\\src\\pages\\ListSongPage.vue","mtime":1679066362558},{"path":"D:\\AC\\shixun\\MusicSystem\\MusicSystemAdminVue\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1679068974580},{"path":"D:\\AC\\shixun\\MusicSystem\\MusicSystemAdminVue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1679068978387}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtaXhpbiB9IGZyb20gJy4uL21peGlucy9pbmRleCc7DQppbXBvcnQge2xpc3RTb25nRGV0YWlsLHNvbmdPZlNvbmdJZCxzb25nT2ZTb25nTmFtZSxsaXN0U29uZ0FkZCxkZWxMaXN0U29uZ30gZnJvbSAnLi4vYXBpL2luZGV4JzsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIG1peGluczogW21peGluXSwNCiAgICBkYXRhKCl7DQogICAgICAgIHJldHVybnsNCiAgICAgICAgICAgIGNlbnRlckRpYWxvZ1Zpc2libGU6IGZhbHNlLCAvL+a3u+WKoOW8ueeql+aYr+WQpuaYvuekug0KICAgICAgICAgICAgZGVsVmlzaWJsZTogZmFsc2UsICAgICAgICAgIC8v5Yig6Zmk5by556qX5piv5ZCm5pi+56S6DQogICAgICAgICAgICByZWdpc3RlckZvcm06eyAgICAgIC8v5re75Yqg5qGGDQogICAgICAgICAgICAgICAgc2luZ2VyTmFtZTogJycsICAgICAvL+atjOaJi+WQjeWtlw0KICAgICAgICAgICAgICAgIHNvbmdOYW1lOiAnJyAgICAgICAgLy/mrYzmm7LlkI3lrZcNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB0YWJsZURhdGE6IFtdLA0KICAgICAgICAgICAgdGVtcERhdGE6IFtdLA0KICAgICAgICAgICAgc2VsZWN0X3dvcmQ6ICcnLA0KICAgICAgICAgICAgaWR4OiAtMSwgICAgICAgICAgLy/lvZPliY3pgInmi6npobkNCiAgICAgICAgICAgIG11bHRpcGxlU2VsZWN0aW9uOiBbXSwgICAvL+WTquS6m+mhueW3sue7j+aJk+WLvg0KICAgICAgICAgICAgc29uZ0xpc3RJZDogJycgICAgICAgICAgLy/mrYzljZVpZA0KICAgICAgICB9DQogICAgfSwNCiAgICB3YXRjaDp7DQogICAgICAgIC8v5pCc57Si5qGG6YeM6Z2i55qE5YaF5a655Y+R55Sf5Y+Y5YyW55qE5pe25YCZ77yM5pCc57Si57uT5p6cdGFibGXliJfooajnmoTlhoXlrrnot5/nnYDlroPnmoTlhoXlrrnlj5HnlJ/lj5jljJYNCiAgICAgICAgc2VsZWN0X3dvcmQ6IGZ1bmN0aW9uKCl7DQogICAgICAgICAgICBpZih0aGlzLnNlbGVjdF93b3JkID09ICcnKXsNCiAgICAgICAgICAgICAgICB0aGlzLnRhYmxlRGF0YSA9IHRoaXMudGVtcERhdGE7DQogICAgICAgICAgICB9ZWxzZXsNCiAgICAgICAgICAgICAgICB0aGlzLnRhYmxlRGF0YSA9IFtdOw0KICAgICAgICAgICAgICAgIGZvcihsZXQgaXRlbSBvZiB0aGlzLnRlbXBEYXRhKXsNCiAgICAgICAgICAgICAgICAgICAgaWYoaXRlbS5uYW1lLmluY2x1ZGVzKHRoaXMuc2VsZWN0X3dvcmQpKXsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudGFibGVEYXRhLnB1c2goaXRlbSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9LA0KICAgIGNyZWF0ZWQoKXsNCiAgICAgICAgdGhpcy5zb25nTGlzdElkID0gdGhpcy4kcm91dGUucXVlcnkuaWQ7DQogICAgICAgIHRoaXMuZ2V0RGF0YSgpOw0KICAgIH0sDQogICAgbWV0aG9kczp7DQogICAgICAgIC8v5p+l6K+i5omA5pyJ5q2M5omLDQogICAgICAgIGdldERhdGEoKXsNCiAgICAgICAgICAgIHRoaXMudGVtcERhdGEgPSBbXTsNCiAgICAgICAgICAgIHRoaXMudGFibGVEYXRhID0gW107DQogICAgICAgICAgICBsaXN0U29uZ0RldGFpbCh0aGlzLnNvbmdMaXN0SWQpLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgICAgICBmb3IobGV0IGl0ZW0gb2YgcmVzKXsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRTb25nKGl0ZW0uc29uZ0lkKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICAvL+agueaNruatjOabsmlk5p+l6K+i5q2M5puy5a+56LGh77yM5pS+5YiwdGVtcERhdGHlkox0YWJsZURhdGHph4zpnaINCiAgICAgICAgZ2V0U29uZyhpZCl7DQogICAgICAgICAgICBzb25nT2ZTb25nSWQoaWQpDQogICAgICAgICAgICAudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMudGVtcERhdGEucHVzaChyZXMpOw0KICAgICAgICAgICAgICAgIHRoaXMudGFibGVEYXRhLnB1c2gocmVzKTsNCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICAuY2F0Y2goZXJyID0+IHsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpOw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQogICAgICAgIC8v5re75Yqg5q2M5puy5YmN55qE5YeG5aSH77yM6I635Y+W5Yiw5q2M5puyaWQgICAgICAgIA0KICAgICAgICBnZXRTb25nSWQoKXsNCiAgICAgICAgICAgIGxldCBfdGhpcyA9IHRoaXM7DQogICAgICAgICAgICB2YXIgc29uZ09mTmFtZSA9IF90aGlzLnJlZ2lzdGVyRm9ybS5zaW5nZXJOYW1lKyItIitfdGhpcy5yZWdpc3RlckZvcm0uc29uZ05hbWU7DQogICAgICAgICAgICBzb25nT2ZTb25nTmFtZShzb25nT2ZOYW1lKS50aGVuKA0KICAgICAgICAgICAgICAgIHJlcyA9PiB7DQogICAgICAgICAgICAgICAgICAgIGlmKHJlc1swXSA9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KCfmrYzmm7LmiJbogIXmrYzlkI3kuI3mraPnoa4nLCAnd2FybmluZycpDQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgX3RoaXMuYWRkU29uZyhyZXNbMF0uaWQpDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgKQ0KICAgICAgICB9LA0KICAgICAgICAvL+a3u+WKoOatjOabsg0KICAgICAgICBhZGRTb25nKHNvbmdJZCl7DQogICAgICAgICAgICBsZXQgX3RoaXMgPSB0aGlzOw0KICAgICAgICAgICAgbGV0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKTsNCiAgICAgICAgICAgIHBhcmFtcy5hcHBlbmQoJ3NvbmdJZCcsc29uZ0lkKTsNCiAgICAgICAgICAgIHBhcmFtcy5hcHBlbmQoJ3NvbmdMaXN0SWQnLHRoaXMuc29uZ0xpc3RJZCk7DQoNCiAgICAgICAgICAgIGxpc3RTb25nQWRkKHBhcmFtcykNCiAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7DQogICAgICAgICAgICAgICAgaWYocmVzLmNvZGUgPT0gMSl7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RGF0YSgpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeSgi5re75Yqg5oiQ5YqfIiwic3VjY2VzcyIpOw0KICAgICAgICAgICAgICAgIH1lbHNlew0KICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeSgi5re75Yqg5aSx6LSlIiwiZXJyb3IiKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7DQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgX3RoaXMuY2VudGVyRGlhbG9nVmlzaWJsZSA9IGZhbHNlOw0KICAgICAgICB9LA0KICAgICAgICAvL+WIoOmZpOS4gOadoeatjOabsg0KICAgICAgICBkZWxldGVSb3coKXsNCiAgICAgICAgICAgIGRlbExpc3RTb25nKHRoaXMuaWR4LHRoaXMuc29uZ0xpc3RJZCkNCiAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7DQogICAgICAgICAgICAgICAgaWYocmVzKXsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXREYXRhKCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KCLliKDpmaTmiJDlip8iLCJzdWNjZXNzIik7DQogICAgICAgICAgICAgICAgfWVsc2V7DQogICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KCLliKDpmaTlpLHotKUiLCJlcnJvciIpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICAuY2F0Y2goZXJyID0+IHsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpOw0KICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB0aGlzLmRlbFZpc2libGUgPSBmYWxzZTsNCiAgICAgICAgfQ0KICAgIH0gICANCn0NCg=="},{"version":3,"sources":["ListSongPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListSongPage.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div class=\"table\">\r\n        <div class=\"crumbs\">\r\n            <i class=\"el-icon-tickets\"></i>歌单歌曲信息\r\n        </div>\r\n        <div class=\"container\">\r\n            <div class=\"handle-box\">\r\n                <el-button type=\"primary\" size=\"mini\" @click=\"delAll\">批量删除</el-button>\r\n                <el-input v-model=\"select_word\" size=\"mini\" placeholder=\"请输入歌曲名\" class=\"handle-input\"></el-input>\r\n                <el-button type=\"primary\" size=\"mini\" @click=\"centerDialogVisible = true\">添加歌曲</el-button>\r\n            </div>\r\n        </div>\r\n        <el-table size=\"mini\" ref=\"multipleTable\" border style=\"width:100%\" height=\"680px\" :data=\"tableData\" @selection-change=\"handleSelectionChange\">\r\n            <el-table-column type=\"selection\" width=\"40\"></el-table-column>            \r\n            <el-table-column prop=\"name\" label=\"歌手-歌名\" align=\"center\"></el-table-column>            \r\n            <el-table-column label=\"操作\" width=\"150\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button> \r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <el-dialog title=\"添加歌曲\" :visible.sync=\"centerDialogVisible\" width=\"400px\" center>\r\n            <el-form :model=\"registerForm\" ref=\"registerForm\" label-width=\"80px\" action=\"\" id=\"tf\">\r\n                <el-form-item prop=\"singerName\" label=\"歌手名字\" size=\"mini\">\r\n                    <el-input v-model=\"registerForm.singerName\" placeholder=\"歌手名字\"></el-input>\r\n                </el-form-item> \r\n                <el-form-item prop=\"songName\" label=\"歌曲名字\" size=\"mini\">\r\n                    <el-input v-model=\"registerForm.songName\" placeholder=\"歌曲名字\"></el-input>\r\n                </el-form-item>  \r\n            </el-form>\r\n            <span slot=\"footer\">\r\n                <el-button size=\"mini\" @click=\"centerDialogVisible = false\">取消</el-button>\r\n                <el-button size=\"mini\" @click=\"getSongId\">确定</el-button>                \r\n            </span>\r\n        </el-dialog>\r\n        <el-dialog title=\"删除歌曲\" :visible.sync=\"delVisible\" width=\"300px\" center>\r\n            <div align=\"center\">删除不可恢复，是否确定删除？</div>\r\n            <span slot=\"footer\">\r\n                <el-button size=\"mini\" @click=\"delVisible = false\">取消</el-button>\r\n                <el-button size=\"mini\" @click=\"deleteRow\">确定</el-button>                \r\n            </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mixin } from '../mixins/index';\r\nimport {listSongDetail,songOfSongId,songOfSongName,listSongAdd,delListSong} from '../api/index';\r\n\r\nexport default {\r\n    mixins: [mixin],\r\n    data(){\r\n        return{\r\n            centerDialogVisible: false, //添加弹窗是否显示\r\n            delVisible: false,          //删除弹窗是否显示\r\n            registerForm:{      //添加框\r\n                singerName: '',     //歌手名字\r\n                songName: ''        //歌曲名字\r\n            },\r\n            tableData: [],\r\n            tempData: [],\r\n            select_word: '',\r\n            idx: -1,          //当前选择项\r\n            multipleSelection: [],   //哪些项已经打勾\r\n            songListId: ''          //歌单id\r\n        }\r\n    },\r\n    watch:{\r\n        //搜索框里面的内容发生变化的时候，搜索结果table列表的内容跟着它的内容发生变化\r\n        select_word: function(){\r\n            if(this.select_word == ''){\r\n                this.tableData = this.tempData;\r\n            }else{\r\n                this.tableData = [];\r\n                for(let item of this.tempData){\r\n                    if(item.name.includes(this.select_word)){\r\n                        this.tableData.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    created(){\r\n        this.songListId = this.$route.query.id;\r\n        this.getData();\r\n    },\r\n    methods:{\r\n        //查询所有歌手\r\n        getData(){\r\n            this.tempData = [];\r\n            this.tableData = [];\r\n            listSongDetail(this.songListId).then(res => {\r\n                for(let item of res){\r\n                    this.getSong(item.songId);\r\n                }\r\n            })\r\n        },\r\n        //根据歌曲id查询歌曲对象，放到tempData和tableData里面\r\n        getSong(id){\r\n            songOfSongId(id)\r\n            .then(res => {\r\n                this.tempData.push(res);\r\n                this.tableData.push(res);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        },\r\n        //添加歌曲前的准备，获取到歌曲id        \r\n        getSongId(){\r\n            let _this = this;\r\n            var songOfName = _this.registerForm.singerName+\"-\"+_this.registerForm.songName;\r\n            songOfSongName(songOfName).then(\r\n                res => {\r\n                    if(res[0] == undefined) {\r\n                        this.notify('歌曲或者歌名不正确', 'warning')\r\n                        return;\r\n                    }\r\n                    _this.addSong(res[0].id)\r\n                }\r\n            )\r\n        },\r\n        //添加歌曲\r\n        addSong(songId){\r\n            let _this = this;\r\n            let params = new URLSearchParams();\r\n            params.append('songId',songId);\r\n            params.append('songListId',this.songListId);\r\n\r\n            listSongAdd(params)\r\n            .then(res => {\r\n                if(res.code == 1){\r\n                    this.getData();\r\n                    this.notify(\"添加成功\",\"success\");\r\n                }else{\r\n                    this.notify(\"添加失败\",\"error\");\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n            _this.centerDialogVisible = false;\r\n        },\r\n        //删除一条歌曲\r\n        deleteRow(){\r\n            delListSong(this.idx,this.songListId)\r\n            .then(res => {\r\n                if(res){\r\n                    this.getData();\r\n                    this.notify(\"删除成功\",\"success\");\r\n                }else{\r\n                    this.notify(\"删除失败\",\"error\");\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n            this.delVisible = false;\r\n        }\r\n    }   \r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .handle-box{\r\n        margin-bottom: 20px;\r\n    }\r\n    .song-img{\r\n        width: 100%;\r\n        height: 80px;\r\n        border-radius: 5px;\r\n        margin-bottom: 5px;\r\n        overflow: hidden;\r\n    }\r\n    .handle-input{\r\n        width: 300px;\r\n        display: inline-block;\r\n    }\r\n    .pagination{\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n    .play {\r\n        position: absolute;\r\n        z-index: 100;\r\n        width: 80px;\r\n        height: 80px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        cursor: pointer;\r\n        top: 18px;\r\n        left: 15px;\r\n    }\r\n\r\n    .icon {\r\n        width: 2em;\r\n        height: 2em;\r\n        color: white;\r\n        fill: currentColor;\r\n        overflow: hidden;\r\n    }\r\n</style>"]}]}